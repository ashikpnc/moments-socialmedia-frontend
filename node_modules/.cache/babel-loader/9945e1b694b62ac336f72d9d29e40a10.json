{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackgrounds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EmojiPickerBackgrounds(_ref) {\n  _s();\n\n  let {\n    textRef,\n    text,\n    setText,\n    user\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(\"\");\n\n  const handleEmoji = (e, _ref2) => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_center\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textRef,\n        maxLength: \"100\",\n        value: text,\n        placeholder: `What's on your mind, ${user.first_name}`,\n        className: \"post_input\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_emojis_wrap\",\n      children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment_emoji_picker rlmove\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../../icons/colorful.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"emoji_icon_large\",\n        onClick: () => {\n          setPicker(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EmojiPickerBackgrounds, \"qC9saWxim0jz7MrqEc4l4rFHZhw=\");\n\n_c = EmojiPickerBackgrounds;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerBackgrounds\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackgrounds.js"],"names":["React","useEffect","useState","Picker","EmojiPickerBackgrounds","textRef","text","setText","user","picker","setPicker","cursorPosition","setCursorPosition","handleEmoji","e","emoji","ref","current","focus","start","substring","selectionStart","end","newText","length","selectionEnd","first_name","target","value","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,eAAe,SAASC,sBAAT,OAKZ;AAAA;;AAAA,MAL4C;AAC7CC,IAAAA,OAD6C;AAE7CC,IAAAA,IAF6C;AAG7CC,IAAAA,OAH6C;AAI7CC,IAAAA;AAJ6C,GAK5C;AACD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,WAAW,GAAG,CAACC,CAAD,YAAkB;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AACpC,UAAMC,GAAG,GAAGX,OAAO,CAACY,OAApB;AACAD,IAAAA,GAAG,CAACE,KAAJ;AACA,UAAMC,KAAK,GAAGb,IAAI,CAACc,SAAL,CAAe,CAAf,EAAkBJ,GAAG,CAACK,cAAtB,CAAd;AACA,UAAMC,GAAG,GAAGhB,IAAI,CAACc,SAAL,CAAeJ,GAAG,CAACK,cAAnB,CAAZ;AACA,UAAME,OAAO,GAAGJ,KAAK,GAAGJ,KAAR,GAAgBO,GAAhC;AACAf,IAAAA,OAAO,CAACgB,OAAD,CAAP;AACAX,IAAAA,iBAAiB,CAACO,KAAK,CAACK,MAAN,GAAeT,KAAK,CAACS,MAAtB,CAAjB;AACD,GARD;;AAUAvB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACY,OAAR,CAAgBQ,YAAhB,GAA+Bd,cAA/B;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAEN,OADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAEC,IAHT;AAIE,QAAA,WAAW,EAAG,wBAAuBE,IAAI,CAACkB,UAAW,EAJvD;AAKE,QAAA,SAAS,EAAC,YALZ;AAME,QAAA,QAAQ,EAAGZ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACa,MAAF,CAASC,KAAV;AAN1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGnB,MAAM,iBACL;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME;AAAK,QAAA,GAAG,EAAC,6BAAT;AAAuC,QAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbH,UAAAA,SAAS,CAAEmB,IAAD,IAAU,CAACA,IAAZ,CAAT;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AA4BD;;GAnDuBzB,sB;;KAAAA,sB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function EmojiPickerBackgrounds({\n  textRef,\n  text,\n  setText,\n  user,\n}) {\n  const [picker, setPicker] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(\"\");\n\n  const handleEmoji = (e, { emoji }) => {\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  return (\n    <>\n      <div className=\"flex_center\">\n        <textarea\n          ref={textRef}\n          maxLength=\"100\"\n          value={text}\n          placeholder={`What's on your mind, ${user.first_name}`}\n          className=\"post_input\"\n          onChange={(e) => setText(e.target.value)}\n        ></textarea>\n      </div>\n      <div className=\"post_emojis_wrap\">\n        {picker && (\n          <div className=\"comment_emoji_picker rlmove\">\n            <Picker onEmojiClick={handleEmoji} />\n          </div>\n        )}\n        <img src=\"../../../icons/colorful.png\" alt=\"\" />\n        <i\n          className=\"emoji_icon_large\"\n          onClick={() => {\n            setPicker((prev) => !prev);\n          }}\n        ></i>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}