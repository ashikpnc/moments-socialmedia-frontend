{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackground.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmojiPickerBackground(_ref) {\n  _s();\n\n  let {\n    textRef\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n\n  const handleEmoji = (e, _ref2) => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post_emojis_wrap\",\n    children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_emoji_picker rlmove\",\n      children: /*#__PURE__*/_jsxDEV(Picker, {\n        onEmojiClick: handleEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../../../icons/colorful.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"emoji_icon_large\",\n      onClick: () => {\n        setPicker(prev => !prev);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmojiPickerBackground, \"SeYZO3g4We/zmtnXfaF4LTZZ4sE=\");\n\n_c = EmojiPickerBackground;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerBackground\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackground.js"],"names":["React","useState","Picker","EmojiPickerBackground","textRef","picker","setPicker","handleEmoji","e","emoji","ref","current","focus","start","text","substring","selectionStart","end","newText","setText","setCursorPosition","length","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,eAAe,SAASC,qBAAT,OAA4C;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMM,WAAW,GAAG,CAACC,CAAD,YAAkB;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AACpC,UAAMC,GAAG,GAAGN,OAAO,CAACO,OAApB;AACAD,IAAAA,GAAG,CAACE,KAAJ;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkBL,GAAG,CAACM,cAAtB,CAAd;AACA,UAAMC,GAAG,GAAGH,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACM,cAAnB,CAAZ;AACA,UAAME,OAAO,GAAGL,KAAK,GAAGJ,KAAR,GAAgBQ,GAAhC;AACAE,IAAAA,OAAO,CAACD,OAAD,CAAP;AACAE,IAAAA,iBAAiB,CAACP,KAAK,CAACQ,MAAN,GAAeZ,KAAK,CAACY,MAAtB,CAAjB;AACD,GARD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,eACGhB,MAAM,iBACL;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,GAAG,EAAC,6BAAT;AAAuC,MAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbD,QAAAA,SAAS,CAAEgB,IAAD,IAAU,CAACA,IAAZ,CAAT;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3BuBnB,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function EmojiPickerBackground({ textRef }) {\n  const [picker, setPicker] = useState(false);\n  const handleEmoji = (e, { emoji }) => {\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n  return (\n    <div className=\"post_emojis_wrap\">\n      {picker && (\n        <div className=\"comment_emoji_picker rlmove\">\n          <Picker onEmojiClick={handleEmoji} />\n        </div>\n      )}\n      <img src=\"../../../icons/colorful.png\" alt=\"\" />\n      <i\n        className=\"emoji_icon_large\"\n        onClick={() => {\n          setPicker((prev) => !prev);\n        }}\n      ></i>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}