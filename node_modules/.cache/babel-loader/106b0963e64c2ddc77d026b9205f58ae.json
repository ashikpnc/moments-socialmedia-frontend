{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackgrounds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmojiPickerBackgrounds(_ref) {\n  _s();\n\n  let {\n    text,\n    setText,\n    user,\n    type2\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(\"\");\n  const [showBgs, setShowBgs] = useState(false);\n  const textRef = useRef(null);\n\n  const handleEmoji = (e, _ref2) => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n  const postBackgrounds = [\"../../../images/postbackgrounds/1.jpg\", \"../../../images/postbackgrounds/2.jpg\", \"../../../images/postbackgrounds/3.jpg\", \"../../../images/postbackgrounds/4.jpg\", \"../../../images/postbackgrounds/5.jpg\", \"../../../images/postbackgrounds/6.jpg\", \"../../../images/postbackgrounds/7.jpg\", \"../../../images/postbackgrounds/8.jpg\", \"../../../images/postbackgrounds/9.jpg\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type2 ? \"images_input\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"flex_center\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textRef,\n        maxLength: \"100\",\n        value: text,\n        placeholder: `What's on your mind, ${user.first_name}`,\n        className: `post_input ${type2 ? \"input2\" : \"\"}`,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"post_emojis_wrap\" : \"\",\n      children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `comment_emoji_picker ${type2 ? \"movepicker2\" : \"rlmove\"}`,\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), !type2 && /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          setShowBgs(prev => !prev);\n        },\n        src: \"../../../icons/colorful.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), !type2 && showBgs && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_backgrounds\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), postBackgrounds.map((bg, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bg,\n          alt: \"\",\n          onClick: () => {\n            backgroundHanlder(i);\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `emoji_icon_large ${type2 ? \"moveleft\" : \"\"}`,\n        onClick: () => {\n          setPicker(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmojiPickerBackgrounds, \"6Vw4hAoMJy0QyCjtlfwjkqsv5g4=\");\n\n_c = EmojiPickerBackgrounds;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerBackgrounds\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/EmojiPickerBackgrounds.js"],"names":["React","useEffect","useRef","useState","Picker","EmojiPickerBackgrounds","text","setText","user","type2","picker","setPicker","cursorPosition","setCursorPosition","showBgs","setShowBgs","textRef","handleEmoji","e","emoji","ref","current","focus","start","substring","selectionStart","end","newText","length","selectionEnd","postBackgrounds","first_name","target","value","prev","map","bg","i","backgroundHanlder"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function EmojiPickerBackgrounds({ text, setText, user, type2 }) {\n  const [picker, setPicker] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(\"\");\n  const [showBgs, setShowBgs] = useState(false);\n  const textRef = useRef(null);\n\n  const handleEmoji = (e, { emoji }) => {\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  const postBackgrounds = [\n    \"../../../images/postbackgrounds/1.jpg\",\n    \"../../../images/postbackgrounds/2.jpg\",\n    \"../../../images/postbackgrounds/3.jpg\",\n    \"../../../images/postbackgrounds/4.jpg\",\n    \"../../../images/postbackgrounds/5.jpg\",\n    \"../../../images/postbackgrounds/6.jpg\",\n    \"../../../images/postbackgrounds/7.jpg\",\n    \"../../../images/postbackgrounds/8.jpg\",\n    \"../../../images/postbackgrounds/9.jpg\",\n  ];\n\n  return (\n    <div className={type2 ? \"images_input\" : \"\"}>\n      <div className={!type2 ? \"flex_center\" : \"\"}>\n        <textarea\n          ref={textRef}\n          maxLength=\"100\"\n          value={text}\n          placeholder={`What's on your mind, ${user.first_name}`}\n          className={`post_input ${type2 ? \"input2\" : \"\"}`}\n          onChange={(e) => setText(e.target.value)}\n        ></textarea>\n      </div>\n      <div className={!type2 ? \"post_emojis_wrap\" : \"\"}>\n        {picker && (\n          <div\n            className={`comment_emoji_picker ${\n              type2 ? \"movepicker2\" : \"rlmove\"\n            }`}\n          >\n            <Picker onEmojiClick={handleEmoji} />\n          </div>\n        )}\n        {!type2 && (\n          <img\n            onClick={() => {\n              setShowBgs((prev) => !prev);\n            }}\n            src=\"../../../icons/colorful.png\"\n            alt=\"\"\n          />\n        )}\n        {!type2 && showBgs && (\n          <div className=\"post_backgrounds\">\n            <div className=\"no_bg\"></div>\n            {postBackgrounds.map((bg, i) => (\n              <img\n                src={bg}\n                key={i}\n                alt=\"\"\n                onClick={() => {\n                  backgroundHanlder(i);\n                }}\n              />\n            ))}\n          </div>\n        )}\n        <i\n          className={`emoji_icon_large ${type2 ? \"moveleft\" : \"\"}`}\n          onClick={() => {\n            setPicker((prev) => !prev);\n          }}\n        ></i>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}