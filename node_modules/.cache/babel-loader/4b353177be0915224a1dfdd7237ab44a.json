{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/chatComponents/chatBox/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\nimport { getAllMessages, messenger } from \"../../../functions/chat\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { messagesReducer } from \"../../../functions/reducers\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBox(_ref) {\n  _s();\n\n  let {\n    selectedChat\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  const [newMessage, setNewMessage] = useState(false);\n  const socket = useRef();\n  const [{\n    messagesLoading,\n    messages,\n    error\n  }, dispatch] = useReducer(messagesReducer, {\n    messagesLoading: false,\n    messages: [],\n    error: false\n  });\n  useEffect(() => {\n    if (selectedChat.id) {\n      socket.current = io(process.env.REACT_APP_BACKEND_URL);\n      socket.current.emit(\"add-user\", selectedChat.id);\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n  }, [messages]);\n  const messageContainerRef = useRef(null);\n\n  const sendMessage = async () => {\n    setLoading(true);\n    await messenger(selectedChat.id, message, user.token);\n    socket.current.emit(\"send-msg\", {\n      to: selectedChat.id,\n      from: user.id,\n      message: message\n    });\n    setNewMessage(prev => !prev);\n    setLoading(false);\n  };\n\n  const getMessages = async () => {\n    try {\n      dispatch({\n        type: \"MESSAGES_REQUEST\"\n      });\n      const {\n        data,\n        status\n      } = await getAllMessages(selectedChat.id, user.token);\n\n      if (status === \"ok\") {\n        dispatch({\n          type: \"MESSAGES_SUCCESS\",\n          payload: data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: \"MESSAGES_ERROR\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-receive\", msg => {\n        setArrivalMessage(msg);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && getMessages();\n  }, [arrivalMessage]);\n  useEffect(() => {\n    getMessages();\n  }, [selectedChat]);\n  useEffect(() => {\n    getMessages();\n  }, [newMessage]); // useEffect(() => {\n  //   messageContainerRef.current.scrollTop =\n  //     messageContainerRef.current.scrollHeight;\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatBox\",\n    children: [!selectedChat.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noSelectedChat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), selectedChat.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_box_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_box_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedChat.picture,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: `${selectedChat.first_name} ${selectedChat.last_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageContainerRef,\n        className: \"message_container scrollbar\",\n        children: [!messagesLoading && (messages === null || messages === void 0 ? void 0 : messages.map((messageObj, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageObj.sender === user.id ? \"sending\" : \"receiving\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sending_receiving_inner ${messageObj.sender === user.id ? \"sending_inner\" : \"receiving_inner\"}`,\n            children: messageObj.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this))), messagesLoading && /*#__PURE__*/_jsxDEV(PuffLoader, {\n          className: \"messages_loading\",\n          color: \"#fff\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_text_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Send a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), !loading && /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 512 512\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L277.3 424.9l-40.1 74.5c-5.2 9.7-16.3 14.6-27 11.9S192 499 192 488V392c0-5.3 1.8-10.5 5.1-14.7L362.4 164.7c2.5-7.1-6.5-14.3-13-8.4L170.4 318.2l-32 28.9 0 0c-9.2 8.3-22.3 10.6-33.8 5.8l-85-35.4C8.4 312.8 .8 302.2 .1 290s5.5-23.7 16.1-29.8l448-256c10.7-6.1 23.9-5.5 34 1.4z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), loading && /*#__PURE__*/_jsxDEV(PuffLoader, {\n          color: \"#fff\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatBox, \"lhMvOFbAz+ZpERJe6ooKbj8Z7Pw=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/chatComponents/chatBox/index.js"],"names":["useSelector","useEffect","useReducer","useRef","useState","getAllMessages","messenger","PuffLoader","messagesReducer","io","ChatBox","selectedChat","user","state","loading","setLoading","message","setMessage","arrivalMessage","setArrivalMessage","scrollRef","newMessage","setNewMessage","socket","messagesLoading","messages","error","dispatch","id","current","process","env","REACT_APP_BACKEND_URL","emit","scrollIntoView","behaviour","messageContainerRef","sendMessage","token","to","from","prev","getMessages","type","data","status","payload","on","msg","picture","first_name","last_name","map","messageObj","i","sender","text","e","target","value"],"mappings":"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","sourcesContent":["import \"./style.css\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\nimport { getAllMessages, messenger } from \"../../../functions/chat\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { messagesReducer } from \"../../../functions/reducers\";\nimport { io } from \"socket.io-client\";\n\nexport default function ChatBox({ selectedChat }) {\n  const { user } = useSelector((state) => ({ ...state }));\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  const [newMessage, setNewMessage] = useState(false);\n  const socket = useRef();\n  const [{ messagesLoading, messages, error }, dispatch] = useReducer(\n    messagesReducer,\n    {\n      messagesLoading: false,\n      messages: [],\n      error: false,\n    }\n  );\n  useEffect(() => {\n    if (selectedChat.id) {\n      socket.current = io(process.env.REACT_APP_BACKEND_URL);\n      socket.current.emit(\"add-user\", selectedChat.id);\n    }\n  }, [selectedChat]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\n  }, [messages]);\n\n  const messageContainerRef = useRef(null);\n\n  const sendMessage = async () => {\n    setLoading(true);\n    await messenger(selectedChat.id, message, user.token);\n    socket.current.emit(\"send-msg\", {\n      to: selectedChat.id,\n      from: user.id,\n      message: message,\n    });\n    setNewMessage((prev) => !prev);\n    setLoading(false);\n  };\n  const getMessages = async () => {\n    try {\n      dispatch({ type: \"MESSAGES_REQUEST\" });\n      const { data, status } = await getAllMessages(\n        selectedChat.id,\n        user.token\n      );\n      if (status === \"ok\") {\n        dispatch({ type: \"MESSAGES_SUCCESS\", payload: data });\n      }\n    } catch (error) {\n      dispatch({ type: \"MESSAGES_ERROR\" });\n    }\n  };\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-receive\", (msg) => {\n        setArrivalMessage(msg);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && getMessages();\n  }, [arrivalMessage]);\n  useEffect(() => {\n    getMessages();\n  }, [selectedChat]);\n  useEffect(() => {\n    getMessages();\n  }, [newMessage]);\n  // useEffect(() => {\n  //   messageContainerRef.current.scrollTop =\n  //     messageContainerRef.current.scrollHeight;\n  // }, []);\n  return (\n    <div className=\"chatBox\">\n      {!selectedChat.id && (\n        <div className=\"noSelectedChat\">\n          <div>Select a chat to start messaging</div>\n        </div>\n      )}\n      {selectedChat.id && (\n        <div className=\"chat_box_wrap\">\n          <div className=\"chat_box_header\">\n            <img src={selectedChat.picture} alt=\"\" />\n            <h4>{`${selectedChat.first_name} ${selectedChat.last_name}`}</h4>\n            <div>online</div>\n          </div>\n          <div\n            ref={messageContainerRef}\n            className=\"message_container scrollbar\"\n          >\n            {!messagesLoading &&\n              messages?.map((messageObj, i) => (\n                <div\n                  className={`${\n                    messageObj.sender === user.id ? \"sending\" : \"receiving\"\n                  }`}\n                  key={i}\n                >\n                  <div\n                    className={`sending_receiving_inner ${\n                      messageObj.sender === user.id\n                        ? \"sending_inner\"\n                        : \"receiving_inner\"\n                    }`}\n                  >\n                    {messageObj.text}\n                  </div>\n                </div>\n              ))}\n            {messagesLoading && (\n              <PuffLoader className=\"messages_loading\" color=\"#fff\" size={30} />\n            )}\n          </div>\n          <div className=\"chat_text_box\">\n            <input\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Send a message...\"\n            />\n            {!loading && (\n              <svg viewBox=\"0 0 512 512\" onClick={sendMessage}>\n                <path d=\"M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L277.3 424.9l-40.1 74.5c-5.2 9.7-16.3 14.6-27 11.9S192 499 192 488V392c0-5.3 1.8-10.5 5.1-14.7L362.4 164.7c2.5-7.1-6.5-14.3-13-8.4L170.4 318.2l-32 28.9 0 0c-9.2 8.3-22.3 10.6-33.8 5.8l-85-35.4C8.4 312.8 .8 302.2 .1 290s5.5-23.7 16.1-29.8l448-256c10.7-6.1 23.9-5.5 34 1.4z\" />\n              </svg>\n            )}\n            {loading && <PuffLoader color=\"#fff\" size={30} />}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}