{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport React, { useRef, useState } from \"react\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport Picker from \"emoji-picker-react\";\nimport ImagePreview from \"./ImagePreview\";\nimport EmojiPickerBackground from \"./EmojiPickerBackground\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePostPopup(_ref) {\n  _s();\n\n  let {\n    setCreatePostPopup,\n    user\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [picker, setPicker] = useState(false);\n  const popupRef = useRef();\n  const textRef = useRef(null);\n  useClickOutside(popupRef, () => setCreatePostPopup(false));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blur\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_box\",\n      ref: popupRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small_circle\",\n          onClick: () => setCreatePostPopup(false),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"exit_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), !showPrev && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_center\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textRef,\n          maxLength: \"100\",\n          value: text,\n          placeholder: `What's on your mind, ${user.first_name}`,\n          className: \"post_input\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_emojis_wrap\",\n        children: [picker && /*#__PURE__*/_jsxDEV(Picker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../../../icons/colorful.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"emoji_icon_large\",\n          onClick: () => {\n            setPicker(prev => !prev);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePostPopup, \"M5KxjmTz7kn/lzbuvWSU0MB7rDM=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = CreatePostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostPopup\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/index.js"],"names":["React","useRef","useState","useClickOutside","Picker","ImagePreview","EmojiPickerBackground","CreatePostPopup","setCreatePostPopup","user","text","setText","showPrev","setShowPrev","picker","setPicker","popupRef","textRef","first_name","e","target","value","prev"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,eAAe,SAASC,eAAT,OAAuD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAA8B;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMc,QAAQ,GAAGf,MAAM,EAAvB;AACA,QAAMgB,OAAO,GAAGhB,MAAM,CAAC,IAAD,CAAtB;AACAE,EAAAA,eAAe,CAACa,QAAD,EAAW,MAAMR,kBAAkB,CAAC,KAAD,CAAnC,CAAf;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEQ,QAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAMR,kBAAkB,CAAC,KAAD,CAFnC;AAAA,iCAIE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUG,CAACI,QAAD,iBACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AACE,UAAA,GAAG,EAAEK,OADP;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAEP,IAHT;AAIE,UAAA,WAAW,EAAG,wBAAuBD,IAAI,CAACS,UAAW,EAJvD;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,QAAQ,EAAGC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAN1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ,eAsBE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACGP,MAAM,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADb,eAEE;AAAK,UAAA,GAAG,EAAC,6BAAT;AAAuC,UAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,SAAS,CAAEO,IAAD,IAAU,CAACA,IAAZ,CAAT;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA7CuBf,e;UAMtBJ,e;;;KANsBI,e","sourcesContent":["import \"./style.css\";\nimport React, { useRef, useState } from \"react\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport Picker from \"emoji-picker-react\";\nimport ImagePreview from \"./ImagePreview\";\nimport EmojiPickerBackground from \"./EmojiPickerBackground\";\n\nexport default function CreatePostPopup({ setCreatePostPopup, user }) {\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [picker, setPicker] = useState(false);\n  const popupRef = useRef();\n  const textRef = useRef(null);\n  useClickOutside(popupRef, () => setCreatePostPopup(false));\n\n  return (\n    <div className=\"blur\">\n      <div className=\"post_box\" ref={popupRef}>\n        <div className=\"box_header\">\n          <div\n            className=\"small_circle\"\n            onClick={() => setCreatePostPopup(false)}\n          >\n            <i className=\"exit_icon\"></i>\n          </div>\n          <span>Create Post</span>\n        </div>\n        {!showPrev && (\n          <div className=\"flex_center\">\n            <textarea\n              ref={textRef}\n              maxLength=\"100\"\n              value={text}\n              placeholder={`What's on your mind, ${user.first_name}`}\n              className=\"post_input\"\n              onChange={(e) => setText(e.target.value)}\n            ></textarea>\n          </div>\n        )}\n        <div className=\"post_emojis_wrap\">\n          {picker && <Picker />}\n          <img src=\"../../../icons/colorful.png\" alt=\"\" />\n          <i\n            className=\"emoji_icon_large\"\n            onClick={() => {\n              setPicker((prev) => !prev);\n            }}\n          ></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}