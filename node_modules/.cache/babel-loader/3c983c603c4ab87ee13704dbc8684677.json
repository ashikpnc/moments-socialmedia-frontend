{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport React, { useRef, useState } from \"react\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport ImagePreview from \"./ImagePreview\";\nimport EmojiPickerBackgrounds from \"./EmojiPickerBackgrounds\";\nimport { Photo } from \"../../svg\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { createPost } from \"../../functions/post\";\nimport PostError from \"./PostError\";\nimport dataUrlToBlob from \"../../helpers/dataUrlToBlob\";\nimport { uploadImages } from \"../../functions/uploadImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePostPopup(_ref) {\n  _s();\n\n  let {\n    setCreatePostPopup,\n    user,\n    setNewPost\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [images, setImages] = useState([]);\n  const [background, setBackground] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const popupRef = useRef(null);\n  useClickOutside(popupRef, () => setCreatePostPopup(false));\n\n  const postSubmit = async () => {\n    if (background) {\n      setLoading(true);\n      const response = await createPost(null, background, text, null, user.id, user.token);\n      setLoading(false);\n\n      if (response === \"ok\") {\n        setText(\"\");\n        setBackground(\"\");\n        setCreatePostPopup(false);\n        setNewPost(prev => !prev);\n      } else {\n        setError(response);\n      }\n    } else if (images && images.length) {\n      setLoading(true);\n      const blobImages = images.map(img => {\n        return dataUrlToBlob(img);\n      });\n      const path = `${user.username}/post Images`;\n      let formData = new FormData();\n      formData.append(\"path\", path);\n      blobImages.forEach(img => {\n        formData.append(\"file\", img);\n      });\n      const cloudinaryData = await uploadImages(formData, user.token);\n      const response = await createPost(null, null, text, cloudinaryData, user.id, user.token);\n      setLoading(false);\n\n      if (response === \"ok\") {\n        setText(\"\");\n        setCreatePostPopup(false);\n        setNewPost(prev => !prev);\n      } else {\n        setError(response);\n      }\n    } else if (text) {\n      setLoading(true);\n      const response = await createPost(null, null, text, null, user.id, user.token);\n      setLoading(false);\n\n      if (response === \"ok\") {\n        setText(\"\");\n        setCreatePostPopup(false);\n        setNewPost(prev => !prev);\n      } else {\n        setError(response);\n      }\n    } else {\n      console.log(\"nothing\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blur\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_box\",\n      ref: popupRef,\n      children: [error && /*#__PURE__*/_jsxDEV(PostError, {\n        error: error,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small_circle\",\n          onClick: () => setCreatePostPopup(false),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"exit_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), !showPrev ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmojiPickerBackgrounds, {\n          user: user,\n          text: text,\n          setText: setText,\n          showPrev: showPrev,\n          background: background,\n          setBackground: setBackground\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(ImagePreview, {\n        user: user,\n        text: text,\n        setText: setText,\n        images: images,\n        setImages: setImages,\n        setShowPrev: setShowPrev,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setShowPrev(prev => !prev);\n        },\n        className: \"addtoyourpost\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_header_right hover1\",\n          children: /*#__PURE__*/_jsxDEV(Photo, {\n            color: \"#45bd62\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          postSubmit();\n        },\n        disabled: loading,\n        className: \"post_button\",\n        children: loading ? /*#__PURE__*/_jsxDEV(PulseLoader, {\n          color: \"#fff\",\n          size: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 22\n        }, this) : \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePostPopup, \"JOdE6hJXIHPU1DhILMHrREHUQfc=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = CreatePostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostPopup\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/createPostPopup/index.js"],"names":["React","useRef","useState","useClickOutside","ImagePreview","EmojiPickerBackgrounds","Photo","PulseLoader","createPost","PostError","dataUrlToBlob","uploadImages","CreatePostPopup","setCreatePostPopup","user","setNewPost","text","setText","showPrev","setShowPrev","images","setImages","background","setBackground","loading","setLoading","error","setError","popupRef","postSubmit","response","id","token","prev","length","blobImages","map","img","path","username","formData","FormData","append","forEach","cloudinaryData","console","log"],"mappings":"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","sourcesContent":["import \"./style.css\";\nimport React, { useRef, useState } from \"react\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport ImagePreview from \"./ImagePreview\";\nimport EmojiPickerBackgrounds from \"./EmojiPickerBackgrounds\";\nimport { Photo } from \"../../svg\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { createPost } from \"../../functions/post\";\nimport PostError from \"./PostError\";\nimport dataUrlToBlob from \"../../helpers/dataUrlToBlob\";\nimport { uploadImages } from \"../../functions/uploadImages\";\n\nexport default function CreatePostPopup({\n  setCreatePostPopup,\n  user,\n  setNewPost,\n}) {\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [images, setImages] = useState([]);\n  const [background, setBackground] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const popupRef = useRef(null);\n  useClickOutside(popupRef, () => setCreatePostPopup(false));\n\n  const postSubmit = async () => {\n    if (background) {\n      setLoading(true);\n      const response = await createPost(\n        null,\n        background,\n        text,\n        null,\n        user.id,\n        user.token\n      );\n      setLoading(false);\n      if (response === \"ok\") {\n        setText(\"\");\n        setBackground(\"\");\n        setCreatePostPopup(false);\n        setNewPost((prev) => !prev);\n      } else {\n        setError(response);\n      }\n    } else if (images && images.length) {\n      setLoading(true);\n      const blobImages = images.map((img) => {\n        return dataUrlToBlob(img);\n      });\n      const path = `${user.username}/post Images`;\n      let formData = new FormData();\n      formData.append(\"path\", path);\n      blobImages.forEach((img) => {\n        formData.append(\"file\", img);\n      });\n      const cloudinaryData = await uploadImages(formData, user.token);\n      const response = await createPost(\n        null,\n        null,\n        text,\n        cloudinaryData,\n        user.id,\n        user.token\n      );\n      setLoading(false);\n      if (response === \"ok\") {\n        setText(\"\");\n        setCreatePostPopup(false);\n        setNewPost((prev) => !prev);\n      } else {\n        setError(response);\n      }\n    } else if (text) {\n      setLoading(true);\n      const response = await createPost(\n        null,\n        null,\n        text,\n        null,\n        user.id,\n        user.token\n      );\n      setLoading(false);\n      if (response === \"ok\") {\n        setText(\"\");\n        setCreatePostPopup(false);\n        setNewPost((prev) => !prev);\n      } else {\n        setError(response);\n      }\n    } else {\n      console.log(\"nothing\");\n    }\n  };\n\n  return (\n    <div className=\"blur\">\n      <div className=\"post_box\" ref={popupRef}>\n        {error && <PostError error={error} setError={setError} />}\n        <div className=\"box_header\">\n          <div\n            className=\"small_circle\"\n            onClick={() => setCreatePostPopup(false)}\n          >\n            <i className=\"exit_icon\"></i>\n          </div>\n          <span>Create Post</span>\n        </div>\n        {!showPrev ? (\n          <>\n            <EmojiPickerBackgrounds\n              user={user}\n              text={text}\n              setText={setText}\n              showPrev={showPrev}\n              background={background}\n              setBackground={setBackground}\n            />\n          </>\n        ) : (\n          <ImagePreview\n            user={user}\n            text={text}\n            setText={setText}\n            images={images}\n            setImages={setImages}\n            setShowPrev={setShowPrev}\n            setError={setError}\n          />\n        )}\n        <div\n          onClick={() => {\n            setShowPrev((prev) => !prev);\n          }}\n          className=\"addtoyourpost\"\n        >\n          <div className=\"post_header_right hover1\">\n            <Photo color=\"#45bd62\" />\n          </div>\n        </div>\n        <button\n          onClick={() => {\n            postSubmit();\n          }}\n          disabled={loading}\n          className=\"post_button\"\n        >\n          {loading ? <PulseLoader color=\"#fff\" size={5} /> : \"Post\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}