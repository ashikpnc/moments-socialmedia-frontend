{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/header/SearchMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { search } from \"../../functions/user\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport { Return, Search } from \"../../svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchMenu(_ref) {\n  _s();\n\n  let {\n    setShowSearchMenu,\n    color,\n    token\n  } = _ref;\n  const searchInputRef = useRef(null);\n  const searchRef = useRef(null);\n  const [showIcon, setShowIcon] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  useClickOutside(searchRef, () => {\n    setShowSearchMenu(false);\n  });\n\n  const searchHandler = async () => {\n    if (searchTerm === \"\") {\n      setSearchTerm(\"\");\n    } else {\n      const res = await search(searchTerm, token);\n      setResults(res);\n    }\n  };\n\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: searchRef,\n    className: \"header_left search_area scrollbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_logo \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle hover1\",\n          onClick: () => {\n            setShowSearchMenu(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Return, {\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        onClick: () => {\n          searchInputRef.current.focus();\n        },\n        children: [showIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: searchInputRef,\n          value: searchTerm,\n          type: \"text\",\n          placeholder: \"Search Moments\",\n          onChange: e => {\n            setSearchTerm(e.target.value);\n          },\n          onFocus: () => {\n            setShowIcon(false);\n          },\n          onBlur: () => {\n            setShowIcon(true);\n          },\n          onKeyUp: searchHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMenu, \"Jv2eRIaf2ftGJRQlzBj9IKR6kto=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = SearchMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMenu\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/header/SearchMenu.js"],"names":["React","useRef","useState","search","useClickOutside","Return","Search","SearchMenu","setShowSearchMenu","color","token","searchInputRef","searchRef","showIcon","setShowIcon","searchTerm","setSearchTerm","results","setResults","searchHandler","res","console","log","current","focus","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;;AAEA,eAAe,SAASC,UAAT,OAAyD;AAAA;;AAAA,MAArC;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,GAAqC;AACtE,QAAMC,cAAc,GAAGV,MAAM,CAAC,IAAD,CAA7B;AACA,QAAMW,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AAEAE,EAAAA,eAAe,CAACQ,SAAD,EAAY,MAAM;AAC/BJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFc,CAAf;;AAGA,QAAMW,aAAa,GAAG,YAAY;AAChC,QAAIJ,UAAU,KAAK,EAAnB,EAAuB;AACrBC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAFD,MAEO;AACL,YAAMI,GAAG,GAAG,MAAMjB,MAAM,CAACY,UAAD,EAAaL,KAAb,CAAxB;AACAQ,MAAAA,UAAU,CAACE,GAAD,CAAV;AACD;AACF,GAPD;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,sBACE;AAAK,IAAA,GAAG,EAAEL,SAAV;AAAqB,IAAA,SAAS,EAAC,mCAA/B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbJ,YAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,WAJH;AAAA,iCAME,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEC;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,cAAc,CAACY,OAAf,CAAuBC,KAAvB;AACD,SAJH;AAAA,mBAMGX,QAAQ,iBACP;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWE;AACE,UAAA,GAAG,EAAEE,cADP;AAEE,UAAA,KAAK,EAAEI,UAFT;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,gBAJd;AAKE,UAAA,QAAQ,EAAGU,CAAD,IAAO;AACfT,YAAAA,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,WAPH;AAQE,UAAA,OAAO,EAAE,MAAM;AACbb,YAAAA,WAAW,CAAC,KAAD,CAAX;AACD,WAVH;AAWE,UAAA,MAAM,EAAE,MAAM;AACZA,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD,WAbH;AAcE,UAAA,OAAO,EAAEK;AAdX;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA/DuBZ,U;UAOtBH,e;;;KAPsBG,U","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { search } from \"../../functions/user\";\nimport { useClickOutside } from \"../../helpers/useClickOutside\";\nimport { Return, Search } from \"../../svg\";\n\nexport default function SearchMenu({ setShowSearchMenu, color, token }) {\n  const searchInputRef = useRef(null);\n  const searchRef = useRef(null);\n  const [showIcon, setShowIcon] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  useClickOutside(searchRef, () => {\n    setShowSearchMenu(false);\n  });\n  const searchHandler = async () => {\n    if (searchTerm === \"\") {\n      setSearchTerm(\"\");\n    } else {\n      const res = await search(searchTerm, token);\n      setResults(res);\n    }\n  };\n  console.log(results);\n  return (\n    <div ref={searchRef} className=\"header_left search_area scrollbar\">\n      <div className=\"search_wrap\">\n        <div className=\"header_logo \">\n          <div\n            className=\"circle hover1\"\n            onClick={() => {\n              setShowSearchMenu(false);\n            }}\n          >\n            <Return color={color} />\n          </div>\n        </div>\n        <div\n          className=\"search\"\n          onClick={() => {\n            searchInputRef.current.focus();\n          }}\n        >\n          {showIcon && (\n            <div>\n              <Search color={color} />\n            </div>\n          )}\n          <input\n            ref={searchInputRef}\n            value={searchTerm}\n            type=\"text\"\n            placeholder=\"Search Moments\"\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n            }}\n            onFocus={() => {\n              setShowIcon(false);\n            }}\n            onBlur={() => {\n              setShowIcon(true);\n            }}\n            onKeyUp={searchHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}