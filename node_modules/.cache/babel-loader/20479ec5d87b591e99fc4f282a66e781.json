{"ast":null,"code":"var _jsxFileName = \"/home/ashik/Projects/Moments/frontend/src/components/chatComponents/contactBox/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { chatContactsReducer } from \"../../../functions/reducers\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport \"./style.css\";\nimport { getAllConversations } from \"../../../functions/chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet typingTimer;\nconst interval = 3000;\nexport default function ContactBox() {\n  _s();\n\n  let {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [{\n    loading,\n    error,\n    contacts\n  }, dispatch] = useReducer(chatContactsReducer, {\n    loading: false,\n    error: false,\n    contacts: []\n  });\n\n  const search = async () => {\n    dispatch({\n      type: \"CHAT_CONTACTS_REQUEST\"\n    });\n    const {\n      data,\n      status\n    } = await getAllConversations(user.token);\n\n    if (status === \"ok\") {\n      dispatch({\n        type: \"CHAT_CONTACTS_SUCCESS\",\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: \"CHAT_CONTACTS_ERROR\"\n      });\n    }\n  };\n\n  const conversationFetching = async () => {\n    dispatch({\n      type: \"CHAT_CONTACTS_REQUEST\"\n    });\n    const {\n      data,\n      status\n    } = await getAllConversations(user.token);\n\n    if (status === \"ok\") {\n      dispatch({\n        type: \"CHAT_CONTACTS_SUCCESS\",\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: \"CHAT_CONTACTS_ERROR\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    conversationFetching();\n  }, []);\n  const [chatSearch, setChatSearch] = useState(\"\");\n  setTimeout(() => {}, 3000);\n  console.log(contacts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contactBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setChatSearch(e.target.value),\n            type: \"text\",\n            value: chatSearch,\n            placeholder: \"Search buddies...\",\n            onKeyDown: () => {\n              clearTimeout(typingTimer);\n            },\n            onKeyUp: () => {\n              clearTimeout(typingTimer);\n              typingTimer = setTimeout(() => {\n                console.log(\"timerrr\");\n              }, interval);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_body scrollbar\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts_loading\",\n          children: /*#__PURE__*/_jsxDEV(BounceLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), !loading && (contacts === null || contacts === void 0 ? void 0 : contacts.map((contact, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.picture,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${user.first_name} ${user.last_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactBox, \"JIvHp37KRKzkupAHZnHbwnH9CPw=\", false, function () {\n  return [useSelector];\n});\n\n_c = ContactBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactBox\");","map":{"version":3,"sources":["/home/ashik/Projects/Moments/frontend/src/components/chatComponents/contactBox/index.js"],"names":["useEffect","useReducer","useState","useSelector","chatContactsReducer","BounceLoader","getAllConversations","typingTimer","interval","ContactBox","user","state","loading","error","contacts","dispatch","search","type","data","status","token","payload","conversationFetching","chatSearch","setChatSearch","setTimeout","console","log","e","target","value","clearTimeout","map","contact","i","picture","first_name","last_name"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { chatContactsReducer } from \"../../../functions/reducers\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport \"./style.css\";\nimport { getAllConversations } from \"../../../functions/chat\";\nlet typingTimer;\nconst interval = 3000;\nexport default function ContactBox() {\n  let { user } = useSelector((state) => ({ ...state }));\n  const [{ loading, error, contacts }, dispatch] = useReducer(\n    chatContactsReducer,\n    {\n      loading: false,\n      error: false,\n      contacts: [],\n    }\n  );\n  const search = async () => {\n    dispatch({ type: \"CHAT_CONTACTS_REQUEST\" });\n    const { data, status } = await getAllConversations(user.token);\n    if (status === \"ok\") {\n      dispatch({ type: \"CHAT_CONTACTS_SUCCESS\", payload: data });\n    } else {\n      dispatch({ type: \"CHAT_CONTACTS_ERROR\" });\n    }\n  };\n  const conversationFetching = async () => {\n    dispatch({ type: \"CHAT_CONTACTS_REQUEST\" });\n    const { data, status } = await getAllConversations(user.token);\n    if (status === \"ok\") {\n      dispatch({ type: \"CHAT_CONTACTS_SUCCESS\", payload: data });\n    } else {\n      dispatch({ type: \"CHAT_CONTACTS_ERROR\" });\n    }\n  };\n  useEffect(() => {\n    conversationFetching();\n  }, []);\n  const [chatSearch, setChatSearch] = useState(\"\");\n  setTimeout(() => {}, 3000);\n  console.log(contacts);\n  return (\n    <div className=\"contactBox\">\n      <div className=\"wrapper\">\n        <div className=\"header\">\n          <div className=\"search\">\n            <input\n              onChange={(e) => setChatSearch(e.target.value)}\n              type=\"text\"\n              value={chatSearch}\n              placeholder=\"Search buddies...\"\n              onKeyDown={() => {\n                clearTimeout(typingTimer);\n              }}\n              onKeyUp={() => {\n                clearTimeout(typingTimer);\n                typingTimer = setTimeout(() => {\n                  console.log(\"timerrr\");\n                }, interval);\n              }}\n            />\n          </div>\n          {/* <h3>MOMENTS CHAT</h3> */}\n        </div>\n        <div className=\"chat_body scrollbar\">\n          {loading && (\n            <div className=\"contacts_loading\">\n              <BounceLoader />\n            </div>\n          )}\n          {!loading &&\n            contacts?.map((contact, i) => (\n              <div key={i} className=\"contact\">\n                <img src={user.picture} alt=\"\" />\n                <span>{`${user.first_name} ${user.last_name}`}</span>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}